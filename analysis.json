{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`api-body-document`\n\nA component to render HTTP method body documentation based on AMF model\n\n## Styling\n\n`<api-body-document>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--api-body-document` | Mixin applied to this elment | `{}`\n`--api-body-document-title-border-color` | Border color of the section title | `#e5e5e5`\n`--api-body-document-title` | Mixni apploied to the title element | `{}`\n`--api-body-document-toggle-view-color` | Color of the toggle view button | `--arc-toggle-view-icon-color` or `rgba(0, 0, 0, 0.74)`\n`--api-body-document-toggle-view-hover-color` | Color of the toggle view button when hovered | `var(--arc-toggle-view-icon-hover-color` or `rgba(0, 0, 0, 0.88)`\n`--api-body-document-description-color` | Color of the type description | `rgba(0, 0, 0, 0.74)`\n`--arc-font-subhead` | Mixin applied to the resource title | `{}`\n`--api-body-document-media-button-background-color` | Selection color of the media type selector | `#CDDC39`\n`--api-body-document-examples-title-color` | Color of examples section title | ``\n`--api-body-document-examples-border-color` | Example section border color | `transparent`\n`--code-background-color` | Background color of the examples section | ``\n`--api-body-document-media-type-label-font-weight` | Font weight of the media type label (when selection is not available) | `500`\n`--api-body-document-title-narrow` | Mixin applied to the title when in narrow layout | `{}`",
      "summary": "",
      "path": "api-body-document.js",
      "properties": [
        {
          "name": "aware",
          "type": "string | null | undefined",
          "description": "`raml-aware` scope property to use.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 249,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "Set to true to open the body view.\nAutormatically updated when the view is toggled from the UI.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "body",
          "type": "Array.<Object>",
          "description": "AMF model for body as a `http://raml.org/vocabularies/http#payload`\ntype.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 6
            },
            "end": {
              "line": 260,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "mediaTypes",
          "type": "Array.<Object>",
          "description": "List of discovered media types in the `body`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "renderMediaSelector",
          "type": "boolean | null | undefined",
          "description": "Computed value. True when mediaTypes has more than one item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "selected",
          "type": "number | null | undefined",
          "description": "Currently selected media type.\nIt is an index of a media type in `mediaTypes` array.\nIt is set to `0` each time the body changes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "selectedBody",
          "type": "Object | null | undefined",
          "description": "A body model for selected media type.\nComputed automatically when selection change.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_selectedBodyChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "selectedSchema",
          "type": "Object | null | undefined",
          "description": "Computed AMF schema object for the body.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 6
            },
            "end": {
              "line": 300,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_selectedSchemaChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "selectedMediaType",
          "type": "string | null | undefined",
          "description": "Name of the selected media type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "isObject",
          "type": "boolean | null | undefined",
          "description": "True if selected body is a structured object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 6
            },
            "end": {
              "line": 315,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isSchema",
          "type": "boolean | null | undefined",
          "description": "True if selected body is a schema (JSON, XML, ...) data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isAnyType",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the body is of \"any\" type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 330,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "typeName",
          "type": "string | null | undefined",
          "description": "Name of the resource type if any.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasTypeName",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if `typeName` is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 6
            },
            "end": {
              "line": 344,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "bodyName",
          "type": "string | null | undefined",
          "description": "Body name, if defined",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 6
            },
            "end": {
              "line": 351,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasBodyName",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if `bodyName` is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 355,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "Name of the resource type if any.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 6
            },
            "end": {
              "line": 365,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasDescription",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if `typeName` is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 6
            },
            "end": {
              "line": 372,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "narrow",
          "type": "boolean | null | undefined",
          "description": "Set to render a mobile friendly view.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 376,
              "column": 7
            },
            "end": {
              "line": 379,
              "column": 8
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_hasObjectExamples",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 7
            },
            "end": {
              "line": 380,
              "column": 56
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_hasAnyExamples",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 381,
              "column": 7
            },
            "end": {
              "line": 381,
              "column": 53
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_bodyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 2
            },
            "end": {
              "line": 400,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__bodyChanged",
          "description": "Computes basic view values when body change.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 2
            },
            "end": {
              "line": 415,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "body",
              "type": "Object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectedBodyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 417,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeMediaTypes",
          "description": "Computes list of media types in the `body`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 426,
              "column": 2
            },
            "end": {
              "line": 435,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "body",
              "type": "Array",
              "description": "Current value of the body."
            }
          ],
          "return": {
            "type": "Array.<Object>"
          }
        },
        {
          "name": "_computeRenderMediaSelector",
          "description": "Computes value for `renderMediaSelector` properety.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 441,
              "column": 2
            },
            "end": {
              "line": 444,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "`mediaTypes` change record."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if there's more than one item in mediaType"
          }
        },
        {
          "name": "_mediaTypeActive",
          "description": "Computes if `selected` equals current item index.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 452,
              "column": 2
            },
            "end": {
              "line": 454,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "Number"
            },
            {
              "name": "index",
              "type": "Number"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_selectMediaType",
          "description": "Handler for media type type button click.\nSets `selected` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 461,
              "column": 2
            },
            "end": {
              "line": 468,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeSelectedBody",
          "description": "Computes value of `http://raml.org/vocabularies/http#schema` for body.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 476,
              "column": 2
            },
            "end": {
              "line": 481,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "Number",
              "description": "Index of currently selected media type in\n`mediaTypes` array"
            },
            {
              "name": "body",
              "type": "Array.<Object>",
              "description": "List of body in request."
            }
          ],
          "return": {
            "type": "(Object | undefined)"
          }
        },
        {
          "name": "_computeSelectedSchema",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 2
            },
            "end": {
              "line": 496,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedBody"
            }
          ]
        },
        {
          "name": "_computeSelectedMediaName",
          "description": "Computes value for `selectedMediaType` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 503,
              "column": 2
            },
            "end": {
              "line": 509,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "Number",
              "description": "Currently selected media type index in the selector."
            },
            {
              "name": "body",
              "type": "Array.<Object>",
              "description": "List of bodies."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Content type value."
          }
        },
        {
          "name": "_selectedSchemaChanged",
          "description": "Handler for body value change. Computes basic view control properties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 514,
              "column": 2
            },
            "end": {
              "line": 535,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "body",
              "type": "Object",
              "description": "Currently computed body."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeToggleActionLabel",
          "description": "Computes a label for the section toggle buttons.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 537,
              "column": 2
            },
            "end": {
              "line": 539,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ]
        },
        {
          "name": "_computeToggleIconClass",
          "description": "Computes class for the toggle's button icon.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 541,
              "column": 2
            },
            "end": {
              "line": 547,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ]
        },
        {
          "name": "toggle",
          "description": "Toggles URI parameters view.\nUse `pathOpened` property instead.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 2
            },
            "end": {
              "line": 554,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeTypeName",
          "description": "Computes `typeName` as a name of body in the AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 561,
              "column": 2
            },
            "end": {
              "line": 567,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "body",
              "type": "Object",
              "description": "Currently selected body."
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_computeBodyName",
          "description": "Computes value for `bodyName`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 573,
              "column": 2
            },
            "end": {
              "line": 575,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema",
              "type": "Object",
              "description": "Computed body schema"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Computed body name"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 576,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.ApiBodyDocument",
      "attributes": [
        {
          "name": "aware",
          "description": "`raml-aware` scope property to use.",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 249,
              "column": 19
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opened",
          "description": "Set to true to open the body view.\nAutormatically updated when the view is toggled from the UI.",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "body",
          "description": "AMF model for body as a `http://raml.org/vocabularies/http#payload`\ntype.",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 6
            },
            "end": {
              "line": 260,
              "column": 17
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "media-types",
          "description": "List of discovered media types in the `body`.",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "render-media-selector",
          "description": "Computed value. True when mediaTypes has more than one item.",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected",
          "description": "Currently selected media type.\nIt is an index of a media type in `mediaTypes` array.\nIt is set to `0` each time the body changes.",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 22
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "selected-body",
          "description": "A body model for selected media type.\nComputed automatically when selection change.",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "selected-schema",
          "description": "Computed AMF schema object for the body.",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 6
            },
            "end": {
              "line": 300,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "selected-media-type",
          "description": "Name of the selected media type.",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "is-object",
          "description": "True if selected body is a structured object",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 6
            },
            "end": {
              "line": 315,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-schema",
          "description": "True if selected body is a schema (JSON, XML, ...) data",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-any-type",
          "description": "Computed value, true if the body is of \"any\" type.",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 330,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "type-name",
          "description": "Name of the resource type if any.",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-type-name",
          "description": "Computed value, true if `typeName` is set.",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 6
            },
            "end": {
              "line": 344,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "body-name",
          "description": "Body name, if defined",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 6
            },
            "end": {
              "line": 351,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-body-name",
          "description": "Computed value, true if `bodyName` is set.",
          "sourceRange": {
            "start": {
              "line": 355,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "description",
          "description": "Name of the resource type if any.",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 6
            },
            "end": {
              "line": 365,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-description",
          "description": "Computed value, true if `typeName` is set.",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 6
            },
            "end": {
              "line": 372,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "narrow",
          "description": "Set to render a mobile friendly view.",
          "sourceRange": {
            "start": {
              "line": 376,
              "column": 7
            },
            "end": {
              "line": 379,
              "column": 8
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "api-body-document",
      "mixins": [
        "AmfHelperMixin"
      ]
    }
  ]
}
